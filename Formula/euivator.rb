# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Euivator < Formula
  desc "A CLI tool to work with EUIs"
  homepage "https://github.com/ttl256/euivator"
  version "0.0.1"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/ttl256/euivator/releases/download/v0.0.1/euivator_0.0.1_darwin_amd64.tar.gz"
      sha256 "50d46d833f344d43bc2e1eb8f78e0055cbd9ea29b094d2f0aede3ca3360d6789"

      def install
        bin.install "euivator"
        output = Utils.popen_read("#{bin}/euivator completion bash")
        (bash_completion/"euivator").write output
        output = Utils.popen_read("#{bin}/euivator completion zsh")
        (zsh_completion/"_euivator").write output
        output = Utils.popen_read("#{bin}/euivator completion fish")
        (fish_completion/"euivator.fish").write output
        prefix.install_metafiles
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/ttl256/euivator/releases/download/v0.0.1/euivator_0.0.1_darwin_arm64.tar.gz"
      sha256 "2bb70bfd72e4f2de07b8e532ba7d878b710cef0901e0d72f6f62389ef86f7df8"

      def install
        bin.install "euivator"
        output = Utils.popen_read("#{bin}/euivator completion bash")
        (bash_completion/"euivator").write output
        output = Utils.popen_read("#{bin}/euivator completion zsh")
        (zsh_completion/"_euivator").write output
        output = Utils.popen_read("#{bin}/euivator completion fish")
        (fish_completion/"euivator.fish").write output
        prefix.install_metafiles
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/ttl256/euivator/releases/download/v0.0.1/euivator_0.0.1_linux_amd64.tar.gz"
        sha256 "47c671ab0202c3a8ac8907b151fcbe70bfe82d3bb03a730d0edf7a65845e63b4"

        def install
          bin.install "euivator"
          output = Utils.popen_read("#{bin}/euivator completion bash")
          (bash_completion/"euivator").write output
          output = Utils.popen_read("#{bin}/euivator completion zsh")
          (zsh_completion/"_euivator").write output
          output = Utils.popen_read("#{bin}/euivator completion fish")
          (fish_completion/"euivator.fish").write output
          prefix.install_metafiles
        end
      end
    end
    if Hardware::CPU.arm?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/ttl256/euivator/releases/download/v0.0.1/euivator_0.0.1_linux_arm64.tar.gz"
        sha256 "524327b7cdae0c353e461f8497aa720448bb487f8604020404d67f664da533f8"

        def install
          bin.install "euivator"
          output = Utils.popen_read("#{bin}/euivator completion bash")
          (bash_completion/"euivator").write output
          output = Utils.popen_read("#{bin}/euivator completion zsh")
          (zsh_completion/"_euivator").write output
          output = Utils.popen_read("#{bin}/euivator completion fish")
          (fish_completion/"euivator.fish").write output
          prefix.install_metafiles
        end
      end
    end
  end

  test do
    system "#{bin}/euivator --version"
  end
end

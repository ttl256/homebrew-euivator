# typed: false
# frozen_string_literal: true

# This file was generated by GoReleaser. DO NOT EDIT.
class Euivator < Formula
  desc "A CLI tool to work with EUIs"
  homepage "https://github.com/ttl256/euivator"
  version "1.0.0"

  on_macos do
    if Hardware::CPU.intel?
      url "https://github.com/ttl256/euivator/releases/download/v1.0.0/euivator_1.0.0_darwin_amd64.tar.gz"
      sha256 "56dbf57034bd430905764a13032526e8eaf2407eed8249bb4cdf002f48dd4423"

      def install
        bin.install "euivator"
        output = Utils.popen_read("#{bin}/euivator completion bash")
        (bash_completion/"euivator").write output
        output = Utils.popen_read("#{bin}/euivator completion zsh")
        (zsh_completion/"_euivator").write output
        output = Utils.popen_read("#{bin}/euivator completion fish")
        (fish_completion/"euivator.fish").write output
        prefix.install_metafiles
      end
    end
    if Hardware::CPU.arm?
      url "https://github.com/ttl256/euivator/releases/download/v1.0.0/euivator_1.0.0_darwin_arm64.tar.gz"
      sha256 "d73fb49efffddde2f3d698769255291acf159ce2b0316b26c24cddeaa8f62c22"

      def install
        bin.install "euivator"
        output = Utils.popen_read("#{bin}/euivator completion bash")
        (bash_completion/"euivator").write output
        output = Utils.popen_read("#{bin}/euivator completion zsh")
        (zsh_completion/"_euivator").write output
        output = Utils.popen_read("#{bin}/euivator completion fish")
        (fish_completion/"euivator.fish").write output
        prefix.install_metafiles
      end
    end
  end

  on_linux do
    if Hardware::CPU.intel?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/ttl256/euivator/releases/download/v1.0.0/euivator_1.0.0_linux_amd64.tar.gz"
        sha256 "f2b2cb9fc61b63c5c9efd8477fba875ba8d1a245ca2ca5cf20fea030fa613bd6"

        def install
          bin.install "euivator"
          output = Utils.popen_read("#{bin}/euivator completion bash")
          (bash_completion/"euivator").write output
          output = Utils.popen_read("#{bin}/euivator completion zsh")
          (zsh_completion/"_euivator").write output
          output = Utils.popen_read("#{bin}/euivator completion fish")
          (fish_completion/"euivator.fish").write output
          prefix.install_metafiles
        end
      end
    end
    if Hardware::CPU.arm?
      if Hardware::CPU.is_64_bit?
        url "https://github.com/ttl256/euivator/releases/download/v1.0.0/euivator_1.0.0_linux_arm64.tar.gz"
        sha256 "95cec171aba575a0d566b1f6ac7d29e55d91749fa9f19d74f6f6f9e37e3d7dbf"

        def install
          bin.install "euivator"
          output = Utils.popen_read("#{bin}/euivator completion bash")
          (bash_completion/"euivator").write output
          output = Utils.popen_read("#{bin}/euivator completion zsh")
          (zsh_completion/"_euivator").write output
          output = Utils.popen_read("#{bin}/euivator completion fish")
          (fish_completion/"euivator.fish").write output
          prefix.install_metafiles
        end
      end
    end
  end

  test do
    system "#{bin}/euivator --version"
  end
end
